USES graph,ncrt,easyer,ketabsup;
type array3x3=array[1..3,1..3] of integer;
label atend;
function det(m:array3x3):longint;
var adet:longint;
begin
adet:=(m[1,1]*m[2,2]*m[3,3])+(m[2,1]*m[3,2]*m[1,3])+(m[3,1]*m[1,2]*m[2,3]);
adet:=adet-((m[1,1]*m[3,2]*m[2,3])+(m[2,1]*m[1,2]*m[3,3])+(m[3,1]*m[2,2]*m[1,3]));
det:=adet;
end;
function getnumber(x,y,cc:integer):integer;
var i:integer;
    s:string;
    c:char;

begin
s:='';
c:=#0;
while keypressed do readkey;
repeat
if keypressed then begin
c:=readkey;
if c=#27 then begin;closegraph;halt;end;
if c=#8 then begin
setcolor (0);
setfillstyle (1,0);
bar (x,y,x+textwidth(s),y+textheight(s));
if length(s)=1 then s:='';
if length(s)>1 then s:=copy(s,1,length(s)-1);
setcolor (cc);
outtextxy(x,y,s);
end;
setcolor (cc);
if (pos(c,'0123456789-')<>0) and ((x+textwidth(s+c))<getmaxx-17) and(length(s)<4) and (vali(s+c)<1000)then begin
setfillstyle (1,0);
{bar (x,y,x+textwidth(s),y+textheight(s));}
setcolor (cc);
outtextxy(x+round((textwidth(s)*0.940)),y,c);
if c<>#8 then s:=s+c;
end;
end;
setcolor(9);
outtextxy (x+round((textwidth(s)*0.940)),y,'_');
if not keypressed then delay(500);
setcolor(0);
outtextxy (x+round((textwidth(s)*0.940)),y,'_');
if not keypressed then delay(500);
until c=#13;
getnumber:=vali(s);
end;
procedure cadr(x1,y1,x2,y2:integer);
var j:integer;
begin
for j:=0 to (63 div 4) do begin
   setrgbpalette (20+(j*4),0,63-(j*4),63-(j*4));
   setcolor (20+(j*4));
   rectangle (x1+(j),y1+(j),x2-(j),y2-(j));
delay (100);
end;
setcolor(11);
rectangle (x1+(j),y1+(j),x2-(j),y2-(j));
end;
var p:pointer;
adet:longint;
    a:array[1..3] of real;
Size: integer;
    i:array[1..10] of integer;
    itemp:longint;
    m,amatrix:array3x3;
    n:array[1..3] of integer;
    x,y:integer;
    adeterminan:longint;
    xdeterminan:array[1..3] of longint;
    s:string;
procedure redrawmatrix;
var t,m1,n1,x,y:integer;
begin
setfillstyle (1,0);
bar (400,20,620,400);
setcolor(12);
SetLineStyle(DottedLn, 0, 2);
line (410, 20,400, 20);
line (410,140,400,140);
line (400, 20,400,140);
line (620, 20,620,140);
line (610, 20,620, 20);
line (610,140,620,140);


line (570,160,560,160);
line (570,280,560,280);
line (560,160,560,280);
line (620,160,620,280);
line (610,160,620,160);
line (610,280,620,280);

x:=460;
y:=27;
setcolor(9);
settextjustify(2,1);
for n1:=1 to 3 do begin
for m1:=1 to 3 do begin
setcolor(7);
if n1<i[1] then setcolor(9);
if (n1=i[1]) and (m1<i[2]) then setcolor(9);
if (m1=i[2]) and (n1=i[1]) then setcolor(11);
outtextxy(x,y,stri(m[m1,n1]));
x:=x+79;
end;
x:=460;
y:=y+50;
end;
x:=460+(2*79);
y:=17+(3*50);
for m1:=1 to 3 do begin
setcolor(7);
if m1<i[4] then setcolor(9);
if m1=i[4] then setcolor(11);
outtextxy(x,y,stri(n[m1]));
y:=y+50;

end;
settextjustify(0,2);
end;
begin
i[1]:=installuserdriver ('svga256',nil);
i[2]:=2;
i[4]:=0;
initgraph(i[1],i[2],'e:\compiler\bp\bgi');
settextjustify(0,2);
delay(3000);
cadr (0,0,640,480);
settextstyle (4,0,4);
setcolor (15);
setrgbpalette (15,63,63,63);
setcolor(8);
setrgbpalette (8,0,0,0);
outtextxy(18,18,'Enter Matrix variables: ');
setcolor(16);
setrgbpalette (16,0,0,0);
outtextxy(17,17,'Enter Matrix variables:');
setcolor (14);
setcolor(17);
setrgbpalette (17,0,0,0);
settextstyle (7,0,5);
x:=64;
y:=120;
for i[1]:=0 to 63 do begin
setrgbpalette (8,0,0,round(i[1] * 0.7));
setrgbpalette (16,i[1],0,0);
setrgbpalette (17,i[1],i[1],0);
delay (100);
{flashrgb (,r1,g1,b1,r2,g2,b2,d,r,c:integer);                    {{³}
end;
setrgbpalette (7,0,0,0);
{setrgbpalette (9,0,0,0);
setrgbpalette (11,0,0,0);}
setrgbpalette (12,0,0,0);
i[1]:=0;
i[2]:=0;
settextstyle (8,0,1);
redrawmatrix;
changergb (12,0,0,0,63,0,0,50);
changergb (7,0,0,0,20,20,20,50);
{changergb (9,0,0,0,0,0,63,50);
changergb (11,0,0,0,0,63,63,50);
changergb (12,0,0,0,63,0,0,50);}
setcolor(15);
i[3]:=70;
for i[1]:=1 to 3 do begin
for i[2]:=1 to 3 do begin
redrawmatrix;
m[i[2],i[1]]:=getnumber(17,i[3],14);
i[3]:=i[3]+30;
end;
end;
i[1]:=20;
i[2]:=20;
redrawmatrix;
if det(m)=0 then begin
settextstyle (10,0,2);
wrga('Determinan is Zero!',17,480-150,15,1,1,0,1,1,1,20,180,false,false); { Writes a String is graphical Screen  }
goto atend;
end;
setlinestyle (0,0,0);
for i[5]:=17 to 90 do begin
setcolor(0);
delay(10);
line (i[5],70,i[5],400);
end;
i[3]:=70;
for i[4]:=1 to 3 do begin
redrawmatrix;
n[i[4]]:=getnumber(17,i[3],14);
i[3]:=i[3]+30;
end;
i[4]:=4;
redrawmatrix;
if (n[1]=0) or (n[2]=0) or (n[3]=0) then begin
settextstyle (10,0,2);
wrga('Y Matrix is Zero!',17,480-150,15,1,1,0,1,1,1,20,180,false,false); { Writes a String is graphical Screen  }
goto atend;
end;

setlinestyle (0,0,0);
for i[5]:=17 to 350 do begin
setcolor(0);
delay(10);
line (i[5],17,i[5],400);
end;
 setcolor(15);
 Size := ImageSize(400, 17, 640-17, 150);
 GetMem(P, Size);
 GetImage(400, 17, 640-17, 150, P^);
i[1]:=400;
repeat
 i[1]:=i[1]-5;
 PutImage(i[1], 17, P^, NormalPut);
setcolor(0);
setfillstyle(1,0);
bar (i[1]+((640-17)-400),17,i[1]+((640-17)-400)+6,150);
delay(10);
until i[1]<=20;
{setcolor(15);
rectangle(560,160,640-17,290);}
 Size := ImageSize(560,160,640-17,290);
 GetMem(P, Size);
 GetImage(560,160,640-17,290, P^);
i[1]:=560;
i[2]:=160;
repeat
if i[1]>340 then i[1]:=i[1]-3;
if i[2]>20 then  i[2]:=i[2]-5;
 PutImage(i[1], i[2], P^, NormalPut);
setcolor(0);
setfillstyle(1,0);
{bar (,17,i[1]+((640-17)-400)+6,150);}
delay(10);
until (i[1]<=340) and (i[2]<=20);
setcolor(16);
settextstyle(7,0,5);
setrgbpalette (16,0,0,0);
outtextxy(247,50,'X =    Y');
changergb(16,0,0,0,63,0,0,50);
settextstyle (10,0,2);
adeterminan:=det(m);
for i[1]:=1 to 3 do begin
    for i[2]:=1 to 3 do begin
        for i[3]:=1 to 3 do begin
            if i[2]<>i[1] then amatrix[i[2],i[3]]:=m[i[2],i[3]];
            if i[2]=i[1] then amatrix[i[2],i[3]]:=n[i[3]];
        end;
    end;
itemp:=det(amatrix);
a[i[1]]:=itemp/adeterminan;
end;
setrgbpalette (17,0,0,0);
setcolor(17);
settextstyle (7,0,3);
s:='X1= '+strr(a[1])+', X2= '+strr(a[2])+', X3= '+strr(a[3]);
{outtextxy(((getmaxx-(2*17))-textwidth(s)) div 2,250,s);}
wrga(s,((getmaxx-(2*17))-textwidth(s)) div 2,250,14,3,4,0,1,1,1,20,180,false,false); { Writes a String is graphical Screen  }
changergb(17,0,0,0,63,63,0,50);
atend:
while keypressed do readkey;
settextstyle (10,0,2);
wrga('Hit any key to Exit...',17,480-77,15,1,2,0,1,1,1,20,150,false,false); { Writes a String is graphical Screen  }
{xx,yy:integer;d:real;{ Effects ,S is your string , & Y are }
 {           cs:integer;yn,ny:boolean);{ giving Starting pixel , C is Color , }
i[1]:=0;
i[2]:=1;
repeat
i[1]:=i[1]+i[2];
if i[1]=63 then i[2]:=-1;
if i[1]=00 then i[2]:=+1;
setrgbpalette (15,63-i[1],63-i[1],63);
delay (50);
until keypressed;
i[1]:=0;
i[2]:=0;
setlinestyle (0,0,0);
repeat
setcolor(11);
rectangle (i[1],i[2],getmaxx-i[1],getmaxy-i[2]);
delay (10);
setcolor(0);
rectangle (i[1],i[2],getmaxx-i[1],getmaxy-i[2]);
if i[1]<getmaxx div 2 then i[1]:=i[1]+1;
if i[2]<getmaxy div 2 then i[2]:=i[2]+1;
until (i[1]>=(getmaxx div 2)) and (i[2]>=(getmaxy div 2));
closegraph;
while keypressed do readkey;
end.